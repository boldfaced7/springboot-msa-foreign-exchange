spring:
  application:
    name: exchange-service

  datasource:
    url: jdbc:mysql://localhost:3306/exchange_db?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
    show-sql: true

  data:
    redis:
      host: localhost
      port: 6379
      password:
      database: 0
      timeout: 10000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1

  kafka:
    bootstrap-servers: localhost:9092,localhost:9093,localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      enable-idempotence: true
      max-in-flight-requests-per-connection: 5
      linger-ms: 5
      compression-type: snappy
      request-timeout-ms: 30000
      max-block-ms: 60000
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: exchange-service-group
      enable-auto-commit: false
      auto-offset-reset: earliest
      max-poll-interval-ms: 300000
      max-poll-records: 500
      session-timeout-ms: 10000
      heartbeat-interval-ms: 3000

# Resilience4J 설정 (Circuit Breaker만)
resilience4j:
  circuitbreaker:
    instances:
      fxCircuitBreaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        record-exceptions:
          - org.springframework.web.reactive.function.client.WebClientResponseException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - java.util.concurrent.TimeoutException
      krwCircuitBreaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        record-exceptions:
          - org.springframework.web.reactive.function.client.WebClientResponseException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - java.util.concurrent.TimeoutException

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers
  endpoint:
    health:
      show-details: always
    circuitbreakers:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

server:
  port: 8081

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    io.github.resilience4j: DEBUG

kafka:
  exchange:
    dlt-topic: exchange-topic.DLT
    deposit-check-topic: exchange-topic.deposit-check
    withdrawal-check-topic: exchange-topic.withdrawal-check
  krw-account:
    withdrawal-cancel-request-topic: krw-account-topic.withdrawal.cancel.request
    withdrawal-cancel-response-topic: krw-account-topic.withdrawal.cancel.response
  fx-account:
    withdrawal-cancel-request-topic: fx-account-topic.withdrawal.cancel
    withdrawal-cancel-response-topic: krw-account-topic.withdrawal.cancel.response
  scheduler:
    scheduler-topic: scheduler-topic
    scheduled-time-millis-header: scheduled-time-millis

web-client:
  fx-account-base-url: http://localhost:8082
  krw-account-base-url: http://localhost:8083

exchange:
  delay-second: 30
  max-count-check: 3

